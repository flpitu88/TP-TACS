
package integracion.webservicex;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "airport", targetNamespace = "http://www.webserviceX.NET", wsdlLocation = "http://www.webservicex.com/airport.asmx?wsdl")

public class Airport extends Service {

	
	private final static URL AIRPORT_WSDL_LOCATION;
	
	private final static WebServiceException AIRPORT_EXCEPTION;
	
	private final static QName AIRPORT_QNAME = new QName(
	    "http://www.webserviceX.NET", "airport");
	
	static {
		URL url = null;
		WebServiceException e = null;
		try {
			url = new URL("http://www.webservicex.com/airport.asmx?wsdl");
		} catch (final MalformedURLException ex) {
			e = new WebServiceException(ex);
		}
		AIRPORT_WSDL_LOCATION = url;
		AIRPORT_EXCEPTION = e;
	}
	
	public Airport() {
	
		super(Airport.__getWsdlLocation(), Airport.AIRPORT_QNAME);
	}
	
	public Airport(final URL wsdlLocation) {
	
		super(wsdlLocation, Airport.AIRPORT_QNAME);
	}
	
	public Airport(final URL wsdlLocation, final QName serviceName) {
	
		super(wsdlLocation, serviceName);
	}
	
	public Airport(final URL wsdlLocation, final QName serviceName,
	    final WebServiceFeature... features) {
	
		super(wsdlLocation, serviceName, features);
	}
	
	public Airport(final URL wsdlLocation, final WebServiceFeature... features) {
	
		super(wsdlLocation, Airport.AIRPORT_QNAME, features);
	}
	
	public Airport(final WebServiceFeature... features) {
	
		super(Airport.__getWsdlLocation(), Airport.AIRPORT_QNAME, features);
	}
	
	private static URL __getWsdlLocation() {
	
		if (Airport.AIRPORT_EXCEPTION != null) {
			throw Airport.AIRPORT_EXCEPTION;
		}
		return Airport.AIRPORT_WSDL_LOCATION;
	}
	
	/**
	 * 
	 * @return returns AirportSoap
	 */
	@WebEndpoint(name = "airportSoap")
	public AirportSoap getAirportSoap() {
	
		return super.getPort(new QName("http://www.webserviceX.NET",
		    "airportSoap"), AirportSoap.class);
	}
	
	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns AirportSoap
	 */
	@WebEndpoint(name = "airportSoap")
	public AirportSoap getAirportSoap(final WebServiceFeature... features) {
	
		return super.getPort(new QName("http://www.webserviceX.NET",
		    "airportSoap"), AirportSoap.class, features);
	}
	
}
